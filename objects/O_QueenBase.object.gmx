<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>S_Queen_Down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// CODE RUN AT CREATION
isAttracting = false;

//Variable for overheating
overheat = 1;
overheat_min = 0;
overheat_max = 10;
overheat_increment = .5;
overheat_decrement = .15;
overheated_flag = false;

image_speed=.25;
xSpeed=0;
ySpeed=0;
ms=3;

///Initialize the player
target_x = x;
target_y = y;
moving = false;

image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CONTROLS

///Handle Player Movement

//Move the player
if ( target_x &gt; x ) { x += 4 } //right
if ( target_x &lt; x ) { x -= 4 } //left
if ( target_y &gt; y ) { y += 4 } //down
if ( target_y &lt; y ) { y -= 4 } //up

//Check for destination
if ( target_x == x &amp;&amp; target_y == y ) {
    moving = false;
    image_speed = 0;
}

//Handle input
if ( keyboard_check(vk_left) &amp;&amp; !moving ) {
    moving = true;
    target_x -= 32;
    sprite_index = S_Queen_Left;
    image_speed = 0.3;
    //sprite_index = spr_Player_Left;
}
if ( keyboard_check(vk_right) &amp;&amp; !moving ) {
    moving = true;
    target_x += 32;
    sprite_index = S_Queen_Right;
    image_speed = 0.3;
    //sprite_index = spr_Player_Right;
}
if ( keyboard_check(vk_up) &amp;&amp; !moving ) {
    moving = true;
    target_y -= 32;
    sprite_index = S_Queen_Up;
    image_speed = 0.3;
    //sprite_index = spr_Player_Up;
}
if ( keyboard_check(vk_down) &amp;&amp; !moving ) {
    moving = true;
    target_y += 32;
    sprite_index = S_Queen_Down;
    image_speed = 0.3;
    //sprite_index = spr_Player_Down;
}
    

//Waving
if(keyboard_check(vk_space) and overheat &lt; overheat_max and overheated_flag = false)
{       
    isAttracting = true;
    overheat += overheat_increment;
} else {
    
    if(overheated_flag = true and overheat &lt;= overheat_min){
        overheated_flag = false
    } 
    if(overheat &gt; overheat_max){
        overheated_flag = true;
    }
    isAttracting = false;
    
    if (overheat &gt; 0) {
        overheat -= overheat_decrement;
    } 
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>703</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_score</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>20</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>50</string>
          </argument>
          <argument>
            <kind>1</kind>
            <string>Followers:</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// OVERHEAT BAR

draw_self();

var BLX=view_xview+20;
var BLY=view_yview+20;

var length_max=440;
var width=10;
var length=(O_QueenBase.overheat)/(O_QueenBase.overheat_max)*length_max - 20;

if (length &lt; 0) {
    length = 0
}

draw_set_color(c_black)
draw_rectangle(BLX-2,BLY-2,BLX+length_max+2,BLY+width+2,false);


draw_set_color(make_colour_hsv(110-(O_QueenBase.overheat*10),255,255))
draw_rectangle(BLX,BLY,BLX+length,BLY+width,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
