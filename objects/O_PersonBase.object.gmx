<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>S_GreyBlock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speedMultiplier=random(3);
target_x = x;
target_y = y;
moving = false;
direction = irandom(3);
alarm[0]=20 //+ 50*irandom(5);
influenceTimer = 0;
willMove = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction = irandom(3) //only move up down left or right

if (irandom(9) &gt; 5) {
    willMove = true 
} else {
    willMove = false
}


alarm[0]=20 + 20*irandom(5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (influenceTimer &gt;= 5){
    sprite_index = S_LightPinkBlock;
    score++;
    instance_destroy();
} 

if (collision_circle(x, y, 100, O_QueenBase, false, true) and O_QueenBase.isAttracting and influenceTimer &lt; 5) 
{
   influenceTimer += 1;
   moving = false;
   exit;
} 
else 
{
    influenceTimer = 0;
    prite_index = S_GreyBlock;
}

//Move the player
if ( target_x &gt; x ) { x += 4 } //right
if ( target_x &lt; x ) { x -= 4 } //left
if ( target_y &gt; y ) { y += 4 } //down
if ( target_y &lt; y ) { y -= 4 } //up

//Check for destination
if ( target_x == x &amp;&amp; target_y == y ) {
    moving = false;
    image_speed = 0;
}

if (willMove){

    if ((direction = 0)  &amp;&amp; !moving){
        moving = true;
        target_x += 32;
    } 
    if ((direction = 1)  &amp;&amp; !moving) {
        moving = true;
        target_y += 32;
    }
    if ((direction = 2)  &amp;&amp; !moving){
        moving = true;
        target_x -= 32;
    } 
    if ((direction = 3)  &amp;&amp; !moving) {
        moving = true;
        target_y -= 32;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
